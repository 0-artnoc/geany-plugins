# -*- coding: utf-8 -*-
#
# WAF build script for geany-plugins - Debugger
#
# Copyright 2011 Enrico Tr√∂ger <enrico(dot)troeger(at)uvena(dot)de>
# Copyright 2011 Frank Lanitz <frank(at)frank(dot)uvena(dot)de>
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
#
# $Id: wscript_configure 1735 2010-11-09 17:03:40Z eht16 $

from waflib.Errors import ConfigurationError
from build.wafutils import add_to_env_and_define, check_cfg_cached

packages = [
	('gtk+-2.0', '2.16', 'GTK'),
    ('glib-2.0', '2.16', 'GLIB'),
    ('gthread-2.0','','GTHREAD'),
    ('webkit-1.0', '1.1.18', 'WEBKIT')
    ]

for package_name, package_version, uselib_store in packages:
    check_cfg_cached(conf,
                     package=package_name,
                     atleast_version=package_version,
                     uselib_store=uselib_store,
                     mandatory=True,
                     args='--cflags --libs')


# Use newer libdevhelp-2.0 if present, and fallback on older libdevhelp-1.0
check_cfg_cached(conf,
                 package='libdevhelp-2.0',
                 atleast_version='2.32.0',
                 uselib_store='LIBDEVHELP',
                 mandatory=False,
                 args='--cflags --libs')


if conf.env['HAVE_LIBDEVHELP'] == 1:
    add_to_env_and_define(conf, 'HAVE_BOOK_MANAGER', 1)
else:
    # fallback
    check_cfg_cached(conf,
                     package='libdevhelp-1.0',
                     atleast_version='2.30.1',
                     uselib_store='LIBDEVHELP',
                     mandatory=False,
                     args='--cflags --libs')
    # finally raise an error if we didn't find any suitable devhelp library to disable this plugin
    if not conf.env['HAVE_LIBDEVHELP'] == 1:
        raise ConfigurationError(u'libdevhelp is necessary for the devhelp plugin')
